/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

 #include <behaviors.dtsi>
 #include <dt-bindings/zmk/keys.h>
 #include <dt-bindings/zmk/bt.h>
 #include <dt-bindings/zmk/rgb.h>
 #include <dt-bindings/zmk/ext_power.h>
 #include <dt-bindings/zmk/outputs.h>

 #define DEFAULT 0
 #define LOWER  1
 #define RAISE  2
 #define ADJUST 3

/* NOTE: At the time of the creation of this keymap, there are no specified codes for 'eisuu' and 'kana' input in ZMK.
However, 'LANG1' and 'LANG2' are fully-functioning candidates for 'kana' and 'eisuu' input respectively.
As such, those are in use within the default layer at this time.*/

/ {
       keymap {
              compatible = "zmk,keymap";
 
              default_layer {
 // ---------------------------------------------------------------------------------------------------------------------------------
 // |  ESC   |   Q    |   W    |   E    |   R    |   T    |                      |   Y    |   U    |   I    |   O    |   P    |  BSPC  |
 // |  TAB   |   A    |   S    |   D    |   F    |   G    |                      |   H    |   J    |   K    |   L    |   ;    |  RET   |
 // |  SHIFT |   Z    |   X    |   C    |   V    |   B    |                      |   N    |   M    |   ,    |   .    |   /    |  RSHFT |
 // |  LCTRL |  LALT  | ADJUST |  LGUI  | RAISE  | LOWER  |                      | SPACE  |  RGUI  |  LEFT  |  DOWN  |  UP    |  RIGHT |
                     bindings = <
       &kp ESC    &kp Q    &kp W      &kp E    &kp R     &kp T                       &kp Y     &kp U     &kp I     &kp O      &kp P     &kp BSPC
       &kp TAB    &kp A    &kp S      &kp D    &kp F     &kp G                       &kp H     &kp J     &kp K     &kp L      &kp SEMI  &kp RET
       &kp LSHFT  &kp Z    &kp X      &kp C    &kp V     &kp B                       &kp N     &kp M     &kp COMMA &kp PERIOD &kp SLASH &kp RSHFT
       &kp LCTRL  &kp LALT &mo ADJUST &kp LGUI &mo RAISE &mo LOWER                   &kp SPACE &kp RGUI  &kp LEFT  &kp DOWN   &kp UP    &kp RIGHT
                     >;
              };
              lower_layer {
 // ---------------------------------------------------------------------------------------------------------------------------------
 // |  ~   |  !   |  @   |  #   |  $   |  %   |                 |  ^   |  &   |  *   |  (   |  )   |      |
 // | CLCK |      |      |      |      |      |                 |      |  -   |  =   |  [   |  ]   | SQT  |
 // |      |      |      |      |      |      |                 |      |      |      |      |  \   |      |
 // |      |      |      |      |      |      |                 |HANJA |HANGUL|      |      |      |      |
                     bindings = <
       &kp GRAVE &kp N1   &kp N2 &kp N3   &kp N4   &kp N5              &kp N6    &kp N7    &kp N8    &kp N9   &kp N0   &trans
       &kp CLCK  &trans   &trans &trans   &trans   &trans              &trans    &kp MINUS &kp EQUAL &kp LBKT &kp RBKT &kp SQT
       &trans    &trans   &trans &trans   &trans   &trans              &trans    &trans    &trans    &trans   &kp BSLH &trans
       &trans    &trans   &trans &trans   &trans   &trans              &kp LANG2 &kp LANG1 &trans    &trans   &trans   &trans
                     >;
              };
              raise_layer {
 // ---------------------------------------------------------------------------------------------------------------------------------
 // |       |  F9   |  F10  |  F11  |  F12  |  HOME |                     |       |       |       |  INS  |  DEL  | PG_UP |
 // |       |  F5   |  F6   |  F7   |  F8   |  END  |                     | LEFT  |  DOWN |  UP   | RIGHT |       | PG_DN |
 // |       |  F1   |  F2   |  F3   |  F4   |       |                     |  VOL- |  VOL+ |  MUTE |   PP  | PREV  | NEXT  |
 // |       |       |       |       |       |       |                     |       |       |  NEXT | VOL-  | VOL+  | PLAY  |
                     bindings = <
       &trans    &kp F9 &kp F10 &kp F11 &kp F12 &kp HOME                  &trans       &trans       &trans     &kp INS     &kp DEL      &kp PG_UP
       &trans    &kp F5 &kp F6  &kp F7  &kp F8  &kp END                   &kp LEFT     &kp DOWN     &kp UP     &kp RIGHT   &trans       &kp PG_DN
       &trans    &kp F1 &kp F2  &kp F3  &kp F4  &trans                    &kp C_VOL_DN &kp C_VOL_UP &kp C_MUTE &kp C_PP    &kp C_PREV   &kp C_NEXT
       &trans    &trans &trans  &trans  &trans  &trans                    &trans       &trans       &trans     &trans      &trans       &trans
                     >;
              };
              adjust_layer {
 // ---------------------------------------------------------------------------------------------------------------------------------
 // |  BT CLR  | BT SEL0  | BT SEL1  | BT SEL2  | BGT SEL3 | BT SEL4  |             | RGB EFF+ | RGB HUE+ | RGB SAT+ | RGB SPD+ | RGB BRI+ | RGB TOG  |
 // |  BT NXT  | OUT TOG  | OUT USB  | OUT BLE  |          |          |             | RGB EFF- | RGB HUE- | RGB SAT- | RGB SPD- | RGB BRI- |          |
 // |  BT PRV  |          |          |          |          |          |             |          |          |          |          |          |          |
 // |          |          |          |          |          |          |             |          |          |          |          |          |          |
                     bindings = <
       &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1       &bt BT_SEL 2      &bt BT_SEL 3       &bt BT_SEL 4          &rgb_ug RGB_EFF &rgb_ug RGB_HUI &rgb_ug RGB_SAI &rgb_ug RGB_SPI &rgb_ug RGB_BRI &rgb_ug RGB_TOG 
       &bt BT_PRV &bt BT_NXT   &out OUT_USB       &out OUT_BLE      &out OUT_TOG       &trans                &rgb_ug RGB_EFR &rgb_ug RGB_HUD &rgb_ug RGB_SAD &rgb_ug RGB_SPD &rgb_ug RGB_BRD &trans
       &trans     &trans       &ext_power EP_OFF  &ext_power EP_ON  &ext_power EP_TOG  &trans                &trans          &trans          &trans          &trans          &trans          &trans
       &trans     &trans       &trans             &trans            &trans             &trans                &trans          &trans          &trans          &trans          &trans          &trans
                     >;    
              };
       };
};
